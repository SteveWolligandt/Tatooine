#ifndef TATOOINE_LINE_SHADER_H
#define TATOOINE_LINE_SHADER_H
//==============================================================================
#include <yavin/shader.h>

#include <string_view>
//==============================================================================
namespace tatooine::gpu {
//==============================================================================
struct line_shader : yavin::shader {
  std::string_view vert_shader_path = "@TATOOINE_LINE_SHADER_VERT_PATH@";
  std::string_view geom_shader_path = "@TATOOINE_LINE_SHADER_GEOM_PATH@";
  std::string_view frag_shader_path = "@TATOOINE_LINE_SHADER_FRAG_PATH@";
  //==============================================================================
  line_shader(float r = 1, float g = 1, float b = 1, float line_width = 10,
              float contour_width = 2, float ambient_factor = 0.5,
              float diffuse_factor = 0.5, float specular_factor = 1,
              float shininess = 10) {
    add_stage<yavin::vertexshader>(vert_shader_path.data());
    add_stage<yavin::geometryshader>(geom_shader_path.data());
    add_stage<yavin::fragmentshader>(frag_shader_path.data());
    create();
    set_color(r, g, b);
    set_line_width(line_width);
    set_contour_width(contour_width);
    set_ambient_factor(ambient_factor);
    set_diffuse_factor(diffuse_factor);
    set_specular_factor(specular_factor);
    set_shininess(shininess);
  }
  //------------------------------------------------------------------------------
  void set_projection_matrix(const yavin::mat4& projection_matrix) {
    set_uniform("projection_matrix", projection_matrix);
  }
  //------------------------------------------------------------------------------
  void set_modelview_matrix(const yavin::mat4& modelview_matrix) {
    set_uniform("modelview_matrix", modelview_matrix);
  }
  //------------------------------------------------------------------------------
  void set_color(float r, float g, float b) { set_uniform("color", r, g, b); }
  //------------------------------------------------------------------------------
  void set_line_width(float line_width) {
    set_uniform("line_width", line_width);
  }
  //------------------------------------------------------------------------------
  void set_contour_width(float contour_width) {
    set_uniform("contour_width", contour_width);
  }
  //------------------------------------------------------------------------------
  void set_ambient_factor(float ambient_factor) {
    set_uniform("ambient_factor", ambient_factor);
  }
  //------------------------------------------------------------------------------
  void set_diffuse_factor(float diffuse_factor) {
    set_uniform("diffuse_factor", diffuse_factor);
  }
  //------------------------------------------------------------------------------
  void set_specular_factor(float specular_factor) {
    set_uniform("specular_factor", specular_factor);
  }
  //------------------------------------------------------------------------------
  void set_shininess(float shininess) { set_uniform("shininess", shininess); }
  //------------------------------------------------------------------------------
  void set_animate(int animate) { set_uniform("animate", animate); }
  //------------------------------------------------------------------------------
  void set_animation_min_alpha(float animation_min_alpha) {
    set_uniform("animation_min_alpha", animation_min_alpha);
  }
  //------------------------------------------------------------------------------
  void set_general_alpha(float general_alpha) {
    set_uniform("general_alpha", general_alpha);
  }
  //------------------------------------------------------------------------------
  void set_fade_length(float fade_length) {
    set_uniform("fade_length", fade_length);
  }
  //------------------------------------------------------------------------------
  void set_time(float time) { set_uniform("time", time); }
};
//==============================================================================
}  // namespace tatooine::gpu
//==============================================================================
#endif
