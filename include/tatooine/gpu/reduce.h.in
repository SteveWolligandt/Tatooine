#ifndef TATOOINE_GPU_REDUCE_H
#define TATOOINE_GPU_REDUCE_H
//==============================================================================
#include <yavin/shader.h>
#include <yavin/texture.h>
//==============================================================================
namespace tatooine::gpu {
//==============================================================================
struct reduce_tex_shader : yavin::shader {
  static constexpr std::string_view comp_shader_path =
      "@TATOOINE_GPU_REDUCE_TEX_COMP_SHADER_PATH@";
  //----------------------------------------------------------------------------
  static auto& get() {
    static reduce_tex_shader singleton;
    return singleton;
  }
  //----------------------------------------------------------------------------
  private:
   reduce_tex_shader() {
     add_stage<yavin::computeshader>(std::string{comp_shader_path});
     create();
   }
  //----------------------------------------------------------------------------
  public:
   void dispatch(GLuint w, GLuint h) {
     bind();
     yavin::gl::dispatch_compute(w, h, 1);
   }
};
//==============================================================================
template <typename Real>
Real reduce(yavin::tex2r<Real>& data) {
  data.bind_image_texture(0);
  [[maybe_unused]] auto& shader = reduce_tex_shader::get();
  //shader.dispatch(data.width() / 32 + 1, data.height() / 32 + 1);
  return 0;
}

//==============================================================================
}
//==============================================================================
#endif
