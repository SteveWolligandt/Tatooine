#version 450
//==============================================================================
#include "node.glsl"
//==============================================================================
layout(binding = 0, std430) buffer result_rast_buffer {
  node result_rast[];
};
layout(binding = 1, std430) buffer working_rast_buffer {
  node working_rast[];
};
layout(binding = 2, std430) buffer result_size_buffer {
  uint result_list_size[];
};
layout(binding = 3, std430) buffer working_size_buffer {
  uint working_list_size[];
};
layout(binding = 7, r32f) uniform image2D curvature_tex;
//==============================================================================
const uvec2 resolution = uvec2(imageSize(curvature_tex));
//==============================================================================
layout(local_size_x = 32, local_size_y = 32) in;
void main() {
  const ivec2 texpos = ivec2(gl_GlobalInvocationID.xy);
  if (texpos.x >= resolution.x || texpos.y >= resolution.y) {
    return;
  }
  const uint fi = (texpos.x + texpos.y * resolution.x) * 2;
  const uint bi = fi + 1;
  imageStore(curvature_tex, texpos, vec4(result_rast[fi].curvature));
}
