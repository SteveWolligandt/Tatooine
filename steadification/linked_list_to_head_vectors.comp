#version 450

#include "layouts.glsl"

const uint END = 0xffffffff;

layout (local_size_x = 16, local_size_y = 16) in;
void main() {
  const ivec2 size = imageSize(head_index_tex).xy;

  // outside of domain
  const ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
  if (pos.x >= size.x || pos.y >= size.y) return;

  // no value in current pixel list
  const uint head_index = imageLoad(head_index_tex, pos).x;
  if (head_index == END) return;

  // do not overwrite written values;
  const vec4 head_vec = imageLoad(head_vectors_tex, pos);
  if (head_vec.b == 1) return;


  // find pixel with smallest tau
  uint front_index = END;
  float min_tau = 3.402823466e+38;
  uint iterator_index = head_index;
  while (iterator_index != END) {
    const float cur_tau = nodes[iterator_index].tau;
    if (cur_tau < min_tau) {
      front_index = iterator_index;
      min_tau = cur_tau;
    }
    iterator_index = nodes[iterator_index].next;
  }
  imageStore(head_vectors_tex, pos, vec4(nodes[front_index].vf, 1, 1));
}
